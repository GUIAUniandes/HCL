scope = {
	0 : {
	    inside:<Key to scope> 
	},
	1 : {
	    inside:<Key to scope> 
	},
	...
}

-----------------------------------------------

instructions = {
    scope1:[instr1, instr2, ..., instrN],
    scope2:[instr1, instr2, ..., instrN],
    ...
}

Where:
instrN = {'do':<Pointer to Guards Table>, 'if':<Pointer to Guards Table>, 'assignment':<Pointer to Assignment Table>}

-----------------------------------------------

definitions = {
     scope1: {
	       var1 : {'size':shape, 'type':type_tok, 'tok':var},
	       var2 : {'size':shape2, 'type':type_tok2, 'tok':var2},
	       ...
	    },
	 scope2: {
	       var1 : {'size':shape, 'type':type_tok, 'tok':var},
	       var5 : {'size':shape2, 'type':type_tok2, 'tok':var2},
	       ...
	    },
	  ...
}

Where:
scopeN exists as key in scope table

-----------------------------------------------

addresses = {
	addr1 = (oper1, op, oper2),
	addr2 = (oper1, op, oper2),
	... 
}

Where:
operN = {'var':(<Scope Number>, <Name of Variable>), 'func':<Pointer to Function Table;>, 'index':<Pointer to Index Table>,
'addr':<Pointer to Address Table>, 'type':<Name of Type>,
'num':<Value Or Inf>}

op = <Token that describes operator>

Conditions:
'var': Optional
'func': Optional
'index': Optional
'addr': Optional
'num': Optional

Relations:
'type' not None
'index' not None → 'var' not None 
'addr' not None → 'var' is None && 'func' is None && 'num' is None
'func' not None → 'var' is None && 'addr' is None && 'num' is None
'num' not None → 'var' is None && 'addr' is None && 'func' is None
'var' not None → 'num' is None && 'addr' is None && 'func' is None

----------------------------------------------

indices = {
	index1:[<Pointer to addresses>, <Pointer to addresses>, ...],
	index2:[<Pointer to addresses>, <Pointer to addresses>, ...],
	...
}

Conditions:
|indexN| > 0 For all N

----------------------------------------------

functions = {
	func1:{'call':<Function Name>, 'args':[<Pointer to addresses table>, <Pointer to addresses table>, ...]},
	...
}

Conditions:
'call' not None
'args' not None
|'args'| > 0 : All system defined functions must define input arguments.
TODO: User function definition

----------------------------------------------

assignments = {
	assignment1:{'var':<Pointer to Addresses>, 'value':<Pointer to Addresses>},
	...
}

Conditions:
'var' not None
'value' not None

----------------------------------------------

guards = {
	guard1:[cond1, cond2, ..., condN],
	...
}

Where:
condN = {'expr':<Pointer to addresses>, 'scope':<Pointer to scope number>}

Conditions:
condN not None
'expr' not None
'scope' not None

----------------------------------------------







