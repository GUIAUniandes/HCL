scope = {
	0 : {
	    inside:<Key to scope> 
	},
	1 : {
	    inside:<Key to scope> 
	},
	...
}

#Keys reference scope existance
definitions = {
     0: {
	       var1 : {'size':shape, 'type':type_tok, 'tok':var},
	       var2 : {'size':shape2, 'type':type_tok2, 'tok':var2},
	       ...
	    },
	 1: {
	       var1 : {'size':shape, 'type':type_tok, 'tok':var},
	       var5 : {'size':shape2, 'type':type_tok2, 'tok':var2},
	       ...
	    },
	  ...
}


#Keys reference scope existance
program = {
     0: [instr1, instr2, ... , instrN],
     1: [instr1, instr2, ... , instrN],
	 ...
}

Where: 
instrN = {type:<Assignment, Do or If>, Set:<Pointer to instruction sequence>, guards:<Pointer to Guard Table; Optional>}

guards = {
	 key1: [g1, g2, ... , gN],
	 key2: [g1, g2, ... , gN],
	 ...
}

Where:
g = {eval:<Pointer to instruction sequence>, scope:<Key to Program>}

instr = {
	TBD
}

