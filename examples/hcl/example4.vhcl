;; example4.vhcl : Autogenerated file by HCL Compiler v1.0

;; Auxiliar character defintion
;; Space character
set space char
;; New Line character
set nl char
;; Space character initialization
mov space 100000
;; New Line character initialization
mov nl 001010

;; General variable defintion
set c0 integer
set i0 integer
set N0 integer
set s0 integer
set r0 integer
set t0 integer
set X0 integer#35
set n0 integer

;; General program execution routine

mov n0 0
mov c0 0
mov N0 100101
mov i0 0
do:
	gss _do0guard0
	clc:
		cmp i0 N0
		neq:
			mov .r3chr 1
		equ:
			mov .r3chr 0
		mov _do0guard0 .r3chr
	act _do0guard0:
		mov .r3int i0
		add .r3int 1
		mov X0[i0] .r3int
		mov .r2int i0
		add .r2int 1
		mov i0 .r2int
do:
	gss _do1guard0
	clc:
		cmp n0 N0
		neq:
			mov .r4chr 1
		equ:
			mov .r4chr 0
		cmp c0 10
		neq:
			mov .r5chr 1
		equ:
			mov .r5chr 0
		and .r4chr .r5chr
		mov _do1guard0 .r4chr
	act _do1guard0:
		if:
			gss _if0guard0 _if0guard1
			cmp X0[n0] 0
			equ:
				mov .r4bol 1
			neq:
				mov .r4bol 0
			mov _if0guard0 .r4bol
			cmp X0[n0] 0
			neq:
				mov .r1bol 1
			equ:
				mov .r1bol 0
			mov _if0guard1 .r1bol
			act _if0guard0:
				mov .r1chr c0
				add .r1chr 1
				mov c0 .r1chr
			act _if0guard1:
		mov .r1int n0
		add .r1int 1
		mov n0 .r1int
if:
	gss _if1guard0 _if1guard1
	cmp c0 10
	slt:
		mov .r5chr 1
	geq:
		mov .r5chr 0
	mov _if1guard0 .r5chr
	cmp c0 10
	equ:
		mov .r1int 1
	neq:
		mov .r1int 0
	mov _if1guard1 .r1int
	act _if1guard0:
		mov r0 ..infty_pos
	act _if1guard1:
		mov s0 0
		do:
			gss _do2guard0
			clc:
				cmp X0[s0] 0
				neq:
					mov .r2int 1
				equ:
					mov .r2int 0
				mov _do2guard0 .r2int
			act _do2guard0:
				mov .r3bol s0
				add .r3bol 1
				mov s0 .r3bol
		mov .r3int s0
		add .r3int 1
		mov t0 .r3int
		do:
			gss _do3guard0
			clc:
				cmp X0[t0] 0
				neq:
					mov .r1chr 1
				equ:
					mov .r1chr 0
				mov _do3guard0 .r1chr
			act _do3guard0:
				mov .r1bol t0
				add .r1bol 1
				mov t0 .r1bol
		mov .r1bol t0
		add .r1bol 1
		mov n0 .r1bol
		mov .r3int n0
		sub .r3int s0
		mov r0 .r3int
		do:
			gss _do4guard0
			clc:
				cmp n0 N0
				neq:
					mov .r2int 1
				equ:
					mov .r2int 0
				mov _do4guard0 .r2int
			act _do4guard0:
				if:
					gss _if2guard0 _if2guard1
					cmp X0[n0] 0
					neq:
						mov .r2int 1
					equ:
						mov .r2int 0
					mov _if2guard0 .r2int
					cmp X0[n0] 0
					equ:
						mov .r4int 1
					neq:
						mov .r4int 0
					mov _if2guard1 .r4int
					act _if2guard0:
					act _if2guard1:
						mov s0 t0
						mov t0 n0
				push r0
				mov .r1bol 1
				sub .r1bol s0
				add .r1bol n0
				push .r1bol
				call min
				mov .r2int ..retint
				mov r0 .r2int
				mov .r4bol n0
				add .r4bol 1
				mov n0 .r4bol
halt