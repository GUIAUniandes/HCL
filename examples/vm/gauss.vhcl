;; This program written for the HCL virtual machines
;; computes the summation of the numbers from 0 to 10
;; using an array, and without using iterative constructs
;; it's just a proof of concept

set nums integer#11
set i integer
set ans integer

mov nums[0] 00000000000000000000000000000000
mov nums[1] 00000000000000000000000000000001
mov nums[2] 00000000000000000000000000000010
mov nums[3] 00000000000000000000000000000011
mov nums[4] 00000000000000000000000000000100
mov nums[5] 00000000000000000000000000000101
mov nums[6] 00000000000000000000000000000110
mov nums[7] 00000000000000000000000000000111
mov nums[8] 00000000000000000000000000001000
mov nums[9] 00000000000000000000000000001001
mov nums[10] 00000000000000000000000000001010

mov i 11111111111111111111111111111111
mov ans 00000000000000000000000000000000

;; PRE: num[i] = i forall i in [0 .. 10]
;; PRE: i = -1 /\ ans = 0

inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


inc i

add ans nums[i]


;; POS: i = 10 /\ ans = summation(i, 1, 10, i)


push i
push ans

call max
set a integer

cmp i ans
neq:	
	mov a 11111111111111111111111111111111
	print a
equ:
	mov a 00000000000000000000000000000000

cmp i i
neq:	
	mov a 11111111111111111111111111111111
	print a
equ:
	mov a 00000000000000000000000000000000
	print i


print ..retint

free i
free ans
free nums

halt